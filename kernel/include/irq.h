
#ifndef __IRQ_H__
#define __IRQ_H__

#include "list.h"

typedef enum {
	IRQ_FLAG_PENDING = 1
} IrqFlag_t;


#define IRQ_COUNT_PER_REG 32
#define IRQ_1_BASE 0
#define IRQ_2_BASE (IRQ_1_BASE + IRQ_COUNT_PER_REG)
#define IRQ_BASIC_BASE (IRQ_2_BASE + IRQ_COUNT_PER_REG)

typedef enum {
	IRQ_1_TIMER0 = IRQ_1_BASE,
	IRQ_1_TIMER1,
	IRQ_1_TIMER2,
	IRQ_1_TIMER3,
	IRQ_1_CODEC0,
	IRQ_1_CODEC1,
	IRQ_1_CODEC2,
	IRQ_1_JPEG,
	IRQ_1_ISP,
	IRQ_1_USB,
	IRQ_1_3D,
	IRQ_1_TRANSPOSER,
	IRQ_1_MULTICORESYNC0,
	IRQ_1_MULTICORESYNC1,
	IRQ_1_MULTICORESYNC2,
	IRQ_1_MULTICORESYNC3,
	IRQ_1_DMA0,
	IRQ_1_DMA1,
	IRQ_1_DMA2,
	IRQ_1_DMA3,
	IRQ_1_DMA4,
	IRQ_1_DMA5,
	IRQ_1_DMA6,
	IRQ_1_DMA7,
	IRQ_1_DMA8,
	IRQ_1_DMA9,
	IRQ_1_DMA10,
	IRQ_1_DMA11,
	IRQ_1_DMA12,
	IRQ_1_AUX,
	IRQ_1_ARM,
	IRQ_1_VPUDMA,

	IRQ_2_HOSTPORT = IRQ_2_BASE,
	IRQ_2_VIDEOSCALER,
	IRQ_2_CCP2TX,
	IRQ_2_SDC,
	IRQ_2_DSI0,
	IRQ_2_AVE,
	IRQ_2_CAM0,
	IRQ_2_CAM1,
	IRQ_2_HDMI0,
	IRQ_2_HDMI1,
	IRQ_2_PIXELVALVE1,
	IRQ_2_I2CSPISLV,
	IRQ_2_DSI1,
	IRQ_2_PWA0,
	IRQ_2_PWA1,
	IRQ_2_CPR,
	IRQ_2_SMI,
	IRQ_2_GPIO0,
	IRQ_2_GPIO1,
	IRQ_2_GPIO2,
	IRQ_2_GPIO3,
	IRQ_2_I2C,
	IRQ_2_SPI,
	IRQ_2_I2SPCM,
	IRQ_2_SDIO,
	IRQ_2_UART,
	IRQ_2_SLIMBUS,
	IRQ_2_VEC,
	IRQ_2_CPG,
	IRQ_2_RNG,
	IRQ_2_ARASANSDIO,
	IRQ_2_AVSPMON,

	IRQ_BASIC_TIMER = IRQ_BASIC_BASE,
	IRQ_BASIC_MAILBOX,
	IRQ_BASIC_DOORBELL_0,
	IRQ_BASIC_DOORBELL_1,
	IRQ_BASIC_GPU_0_HALT,
	IRQ_BASIC_GPU_1_HALT,
	IRQ_BASIC_ILLEGAL_ACCESS_1,
	IRQ_BASIC_ILLEGAL_ACCESS_0,
	IRQ_BASIC_PENDING_REG_1,
	IRQ_BASIC_PENDING_REG_2,
	IRQ_BASIC_GPU_7,
	IRQ_BASIC_GPU_9,
	IRQ_BASIC_GPU_10,
	IRQ_BASIC_GPU_18,
	IRQ_BASIC_GPU_19,
	IRQ_BASIC_GPU_53,
	IRQ_BASIC_GPU_54,
	IRQ_BASIC_GPU_55,
	IRQ_BASIC_GPU_56,
	IRQ_BASIC_GPU_57
} IrqNumber_t;

typedef void (*IrqHandlerCallback_t)(void* data);

typedef bool (*IrqIdentifierCallback_t)(void* data);

typedef struct {
	Node_t n;
	IrqNumber_t num;
	void* data;
	IrqHandlerCallback_t handler;
	IrqIdentifierCallback_t identifier;
	volatile IrqFlag_t flags;
} IrqHandler_t;

void InitInterrupts();

void RegisterIrqHandler(IrqHandler_t* handler);

void DeregisterIrqHandler(IrqHandler_t* handler);

void EnableInterrupts();

void DisableInterrupts();

#endif // __IRQ_H__
